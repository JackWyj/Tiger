State 19 conflicts: 1 shift/reduce
State 32 conflicts: 1 shift/reduce
State 35 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | funcall
    4    | lvalue ASSIGN exp
    5    | NIL
    6    | seq
    7    | INT
    8    | STRING
    9    | LET decs IN explist END
   10    | exp PLUS exp
   11    | exp MINUS exp
   12    | exp TIMES exp
   13    | exp DIVIDE exp
   14    | exp EQ exp
   15    | MINUS exp
   16    | exp NEQ exp
   17    | exp GT exp
   18    | exp LT exp
   19    | exp GE exp
   20    | exp LE exp
   21    | exp AND exp
   22    | exp OR exp
   23    | record
   24    | array
   25    | IF exp THEN exp ELSE exp
   26    | WHILE exp DO exp
   27    | FOR id ASSIGN exp TO exp DO exp
   28    | BREAK

   29 seq: LPAREN explist RPAREN

   30 record: id LBRACE refields RBRACE

   31 refields: id EQ exp COMMA refields
   32         | id EQ exp
   33         | /* empty */

   34 array: id LBRACK exp RBRACK OF exp

   35 decs: dec decs
   36     | /* empty */

   37 dec: tydecs
   38    | vardec
   39    | fundecs

   40 tydecs: tydec tydecs
   41       | tydec

   42 tydec: TYPE id EQ ty

   43 ty: id
   44   | LBRACE typefields RBRACE
   45   | ARRAY OF id

   46 typefields: id COLON id COMMA typefields
   47           | id COLON id
   48           | /* empty */

   49 vardec: VAR id ASSIGN exp
   50       | VAR id COLON id ASSIGN exp

   51 fundecs: fundec fundecs
   52        | fundec

   53 fundec: FUNCTION id LPAREN typefields RPAREN EQ exp
   54       | FUNCTION id LPAREN typefields RPAREN COLON id EQ exp

   55 explist: exp SEMICOLON explist
   56        | exp
   57        | /* empty */

   58 lvalue: id
   59       | lvalue DOT id
   60       | lvalue LBRACK exp RBRACK

   61 funcall: id LPAREN args RPAREN

   62 args: exp COMMA args
   63     | exp
   64     | /* empty */

   65 id: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 65
STRING (259) 8
INT (260) 7
ASSIGN (261) 4 27 49 50
OR (262) 22
AND (263) 21
GE (264) 19
GT (265) 17
LE (266) 20
LT (267) 18
NEQ (268) 16
EQ (269) 14 31 32 42 53 54
MINUS (270) 11 15
PLUS (271) 10
DIVIDE (272) 13
TIMES (273) 12
ELSE (274) 25
OF (275) 34 45
DO (276) 26 27
UMINUS (277)
COMMA (278) 31 46 62
COLON (279) 46 47 50 54
SEMICOLON (280) 55
LPAREN (281) 29 53 54 61
RPAREN (282) 29 53 54 61
LBRACK (283) 34 60
RBRACK (284) 34 60
LBRACE (285) 30 44
RBRACE (286) 30 44
DOT (287) 59
ARRAY (288) 45
IF (289) 25
THEN (290) 25
WHILE (291) 26
FOR (292) 27
TO (293) 27
LET (294) 9
IN (295) 9
END (296) 9
BREAK (297) 28
NIL (298) 5
FUNCTION (299) 53 54
VAR (300) 49 50
TYPE (301) 42


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28, on right: 1 4 10 11 12 13 14 15 16 17 18 19
    20 21 22 25 26 27 31 32 34 49 50 53 54 55 56 60 62 63
seq (50)
    on left: 29, on right: 6
record (51)
    on left: 30, on right: 23
refields (52)
    on left: 31 32 33, on right: 30 31
array (53)
    on left: 34, on right: 24
decs (54)
    on left: 35 36, on right: 9 35
dec (55)
    on left: 37 38 39, on right: 35
tydecs (56)
    on left: 40 41, on right: 37 40
tydec (57)
    on left: 42, on right: 40 41
ty (58)
    on left: 43 44 45, on right: 42
typefields (59)
    on left: 46 47 48, on right: 44 46 53 54
vardec (60)
    on left: 49 50, on right: 38
fundecs (61)
    on left: 51 52, on right: 39 51
fundec (62)
    on left: 53 54, on right: 51 52
explist (63)
    on left: 55 56 57, on right: 9 29 55
lvalue (64)
    on left: 58 59 60, on right: 2 4 59 60
funcall (65)
    on left: 61, on right: 3
args (66)
    on left: 62 63 64, on right: 61 62
id (67)
    on left: 65, on right: 27 30 31 32 34 42 43 45 46 47 49 50 53 54
    58 59 61


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 1

   65 id: ID .

    $default  reduce using rule 65 (id)


state 2

    8 exp: STRING .

    $default  reduce using rule 8 (exp)


state 3

    7 exp: INT .

    $default  reduce using rule 7 (exp)


state 4

   15 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 20
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 5

   29 seq: LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 57 (explist)

    exp      go to state 21
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    explist  go to state 22
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 6

   25 exp: IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 23
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 7

   26 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 24
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 8

   27 exp: FOR . id ASSIGN exp TO exp DO exp

    ID  shift, and go to state 1

    id  go to state 25


state 9

    9 exp: LET . decs IN explist END

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 36 (decs)

    decs     go to state 29
    dec      go to state 30
    tydecs   go to state 31
    tydec    go to state 32
    vardec   go to state 33
    fundecs  go to state 34
    fundec   go to state 35


state 10

   28 exp: BREAK .

    $default  reduce using rule 28 (exp)


state 11

    5 exp: NIL .

    $default  reduce using rule 5 (exp)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 36


state 13

    1 program: exp .
   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    $default  reduce using rule 1 (program)


state 14

    6 exp: seq .

    $default  reduce using rule 6 (exp)


state 15

   23 exp: record .

    $default  reduce using rule 23 (exp)


state 16

   24 exp: array .

    $default  reduce using rule 24 (exp)


state 17

    2 exp: lvalue .
    4    | lvalue . ASSIGN exp
   59 lvalue: lvalue . DOT id
   60       | lvalue . LBRACK exp RBRACK

    ASSIGN  shift, and go to state 49
    LBRACK  shift, and go to state 50
    DOT     shift, and go to state 51

    $default  reduce using rule 2 (exp)


state 18

    3 exp: funcall .

    $default  reduce using rule 3 (exp)


state 19

   30 record: id . LBRACE refields RBRACE
   34 array: id . LBRACK exp RBRACK OF exp
   58 lvalue: id .
   61 funcall: id . LPAREN args RPAREN

    LPAREN  shift, and go to state 52
    LBRACK  shift, and go to state 53
    LBRACE  shift, and go to state 54

    LBRACK    [reduce using rule 58 (lvalue)]
    $default  reduce using rule 58 (lvalue)


state 20

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | MINUS exp .
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    $default  reduce using rule 15 (exp)


state 21

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   55 explist: exp . SEMICOLON explist
   56        | exp .

    OR         shift, and go to state 37
    AND        shift, and go to state 38
    GE         shift, and go to state 39
    GT         shift, and go to state 40
    LE         shift, and go to state 41
    LT         shift, and go to state 42
    NEQ        shift, and go to state 43
    EQ         shift, and go to state 44
    MINUS      shift, and go to state 45
    PLUS       shift, and go to state 46
    DIVIDE     shift, and go to state 47
    TIMES      shift, and go to state 48
    SEMICOLON  shift, and go to state 55

    $default  reduce using rule 56 (explist)


state 22

   29 seq: LPAREN explist . RPAREN

    RPAREN  shift, and go to state 56


state 23

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   25    | IF exp . THEN exp ELSE exp

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48
    THEN    shift, and go to state 57


state 24

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   26    | WHILE exp . DO exp

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48
    DO      shift, and go to state 58


state 25

   27 exp: FOR id . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 59


state 26

   53 fundec: FUNCTION . id LPAREN typefields RPAREN EQ exp
   54       | FUNCTION . id LPAREN typefields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    id  go to state 60


state 27

   49 vardec: VAR . id ASSIGN exp
   50       | VAR . id COLON id ASSIGN exp

    ID  shift, and go to state 1

    id  go to state 61


state 28

   42 tydec: TYPE . id EQ ty

    ID  shift, and go to state 1

    id  go to state 62


state 29

    9 exp: LET decs . IN explist END

    IN  shift, and go to state 63


state 30

   35 decs: dec . decs

    FUNCTION  shift, and go to state 26
    VAR       shift, and go to state 27
    TYPE      shift, and go to state 28

    $default  reduce using rule 36 (decs)

    decs     go to state 64
    dec      go to state 30
    tydecs   go to state 31
    tydec    go to state 32
    vardec   go to state 33
    fundecs  go to state 34
    fundec   go to state 35


state 31

   37 dec: tydecs .

    $default  reduce using rule 37 (dec)


state 32

   40 tydecs: tydec . tydecs
   41       | tydec .

    TYPE  shift, and go to state 28

    TYPE      [reduce using rule 41 (tydecs)]
    $default  reduce using rule 41 (tydecs)

    tydecs  go to state 65
    tydec   go to state 32


state 33

   38 dec: vardec .

    $default  reduce using rule 38 (dec)


state 34

   39 dec: fundecs .

    $default  reduce using rule 39 (dec)


state 35

   51 fundecs: fundec . fundecs
   52        | fundec .

    FUNCTION  shift, and go to state 26

    FUNCTION  [reduce using rule 52 (fundecs)]
    $default  reduce using rule 52 (fundecs)

    fundecs  go to state 66
    fundec   go to state 35


state 36

    0 $accept: program $end .

    $default  accept


state 37

   22 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 67
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 38

   21 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 68
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 39

   19 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 69
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 40

   17 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 70
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 41

   20 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 71
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 42

   18 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 72
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 43

   16 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 73
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 44

   14 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 74
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 45

   11 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 75
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 46

   10 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 76
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 47

   13 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 77
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 48

   12 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 78
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 49

    4 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 79
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 50

   60 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 80
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 51

   59 lvalue: lvalue DOT . id

    ID  shift, and go to state 1

    id  go to state 81


state 52

   61 funcall: id LPAREN . args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 64 (args)

    exp      go to state 82
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    args     go to state 83
    id       go to state 19


state 53

   34 array: id LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 84
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 54

   30 record: id LBRACE . refields RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 33 (refields)

    refields  go to state 85
    id        go to state 86


state 55

   55 explist: exp SEMICOLON . explist

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 57 (explist)

    exp      go to state 21
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    explist  go to state 87
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 56

   29 seq: LPAREN explist RPAREN .

    $default  reduce using rule 29 (seq)


state 57

   25 exp: IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 88
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 58

   26 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 89
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 59

   27 exp: FOR id ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 90
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 60

   53 fundec: FUNCTION id . LPAREN typefields RPAREN EQ exp
   54       | FUNCTION id . LPAREN typefields RPAREN COLON id EQ exp

    LPAREN  shift, and go to state 91


state 61

   49 vardec: VAR id . ASSIGN exp
   50       | VAR id . COLON id ASSIGN exp

    ASSIGN  shift, and go to state 92
    COLON   shift, and go to state 93


state 62

   42 tydec: TYPE id . EQ ty

    EQ  shift, and go to state 94


state 63

    9 exp: LET decs IN . explist END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 57 (explist)

    exp      go to state 21
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    explist  go to state 95
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 64

   35 decs: dec decs .

    $default  reduce using rule 35 (decs)


state 65

   40 tydecs: tydec tydecs .

    $default  reduce using rule 40 (tydecs)


state 66

   51 fundecs: fundec fundecs .

    $default  reduce using rule 51 (fundecs)


state 67

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   22    | exp OR exp .

    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    $default  reduce using rule 22 (exp)


state 68

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   21    | exp AND exp .
   22    | exp . OR exp

    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    $default  reduce using rule 21 (exp)


state 69

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   19    | exp GE exp .
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 19 (exp)


state 70

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   17    | exp GT exp .
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 17 (exp)


state 71

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   20    | exp LE exp .
   21    | exp . AND exp
   22    | exp . OR exp

    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 20 (exp)


state 72

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   18    | exp LT exp .
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 18 (exp)


state 73

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   16    | exp NEQ exp .
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 16 (exp)


state 74

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   14    | exp EQ exp .
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    GE   error (nonassociative)
    GT   error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 14 (exp)


state 75

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   11    | exp MINUS exp .
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    $default  reduce using rule 11 (exp)


state 76

   10 exp: exp . PLUS exp
   10    | exp PLUS exp .
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    $default  reduce using rule 10 (exp)


state 77

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   13    | exp DIVIDE exp .
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    $default  reduce using rule 13 (exp)


state 78

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   12    | exp TIMES exp .
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    $default  reduce using rule 12 (exp)


state 79

    4 exp: lvalue ASSIGN exp .
   10    | exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    $default  reduce using rule 4 (exp)


state 80

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   60 lvalue: lvalue LBRACK exp . RBRACK

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48
    RBRACK  shift, and go to state 96


state 81

   59 lvalue: lvalue DOT id .

    $default  reduce using rule 59 (lvalue)


state 82

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   62 args: exp . COMMA args
   63     | exp .

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48
    COMMA   shift, and go to state 97

    $default  reduce using rule 63 (args)


state 83

   61 funcall: id LPAREN args . RPAREN

    RPAREN  shift, and go to state 98


state 84

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   34 array: id LBRACK exp . RBRACK OF exp

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48
    RBRACK  shift, and go to state 99


state 85

   30 record: id LBRACE refields . RBRACE

    RBRACE  shift, and go to state 100


state 86

   31 refields: id . EQ exp COMMA refields
   32         | id . EQ exp

    EQ  shift, and go to state 101


state 87

   55 explist: exp SEMICOLON explist .

    $default  reduce using rule 55 (explist)


state 88

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   25    | IF exp THEN exp . ELSE exp

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48
    ELSE    shift, and go to state 102


state 89

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   26    | WHILE exp DO exp .

    $default  reduce using rule 26 (exp)


state 90

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   27    | FOR id ASSIGN exp . TO exp DO exp

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48
    TO      shift, and go to state 103


state 91

   53 fundec: FUNCTION id LPAREN . typefields RPAREN EQ exp
   54       | FUNCTION id LPAREN . typefields RPAREN COLON id EQ exp

    ID  shift, and go to state 1

    $default  reduce using rule 48 (typefields)

    typefields  go to state 104
    id          go to state 105


state 92

   49 vardec: VAR id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 106
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 93

   50 vardec: VAR id COLON . id ASSIGN exp

    ID  shift, and go to state 1

    id  go to state 107


state 94

   42 tydec: TYPE id EQ . ty

    ID      shift, and go to state 1
    LBRACE  shift, and go to state 108
    ARRAY   shift, and go to state 109

    ty  go to state 110
    id  go to state 111


state 95

    9 exp: LET decs IN explist . END

    END  shift, and go to state 112


state 96

   60 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 60 (lvalue)


state 97

   62 args: exp COMMA . args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 64 (args)

    exp      go to state 82
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    args     go to state 113
    id       go to state 19


state 98

   61 funcall: id LPAREN args RPAREN .

    $default  reduce using rule 61 (funcall)


state 99

   34 array: id LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 114


state 100

   30 record: id LBRACE refields RBRACE .

    $default  reduce using rule 30 (record)


state 101

   31 refields: id EQ . exp COMMA refields
   32         | id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 115
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 102

   25 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 116
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 103

   27 exp: FOR id ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 117
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 104

   53 fundec: FUNCTION id LPAREN typefields . RPAREN EQ exp
   54       | FUNCTION id LPAREN typefields . RPAREN COLON id EQ exp

    RPAREN  shift, and go to state 118


state 105

   46 typefields: id . COLON id COMMA typefields
   47           | id . COLON id

    COLON  shift, and go to state 119


state 106

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   49 vardec: VAR id ASSIGN exp .

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    $default  reduce using rule 49 (vardec)


state 107

   50 vardec: VAR id COLON id . ASSIGN exp

    ASSIGN  shift, and go to state 120


state 108

   44 ty: LBRACE . typefields RBRACE

    ID  shift, and go to state 1

    $default  reduce using rule 48 (typefields)

    typefields  go to state 121
    id          go to state 105


state 109

   45 ty: ARRAY . OF id

    OF  shift, and go to state 122


state 110

   42 tydec: TYPE id EQ ty .

    $default  reduce using rule 42 (tydec)


state 111

   43 ty: id .

    $default  reduce using rule 43 (ty)


state 112

    9 exp: LET decs IN explist END .

    $default  reduce using rule 9 (exp)


state 113

   62 args: exp COMMA args .

    $default  reduce using rule 62 (args)


state 114

   34 array: id LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 123
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 115

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   31 refields: id EQ exp . COMMA refields
   32         | id EQ exp .

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48
    COMMA   shift, and go to state 124

    $default  reduce using rule 32 (refields)


state 116

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   25    | IF exp THEN exp ELSE exp .

    $default  reduce using rule 25 (exp)


state 117

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   27    | FOR id ASSIGN exp TO exp . DO exp

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48
    DO      shift, and go to state 125


state 118

   53 fundec: FUNCTION id LPAREN typefields RPAREN . EQ exp
   54       | FUNCTION id LPAREN typefields RPAREN . COLON id EQ exp

    EQ     shift, and go to state 126
    COLON  shift, and go to state 127


state 119

   46 typefields: id COLON . id COMMA typefields
   47           | id COLON . id

    ID  shift, and go to state 1

    id  go to state 128


state 120

   50 vardec: VAR id COLON id ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 129
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 121

   44 ty: LBRACE typefields . RBRACE

    RBRACE  shift, and go to state 130


state 122

   45 ty: ARRAY OF . id

    ID  shift, and go to state 1

    id  go to state 131


state 123

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   34 array: id LBRACK exp RBRACK OF exp .

    $default  reduce using rule 34 (array)


state 124

   31 refields: id EQ exp COMMA . refields

    ID  shift, and go to state 1

    $default  reduce using rule 33 (refields)

    refields  go to state 132
    id        go to state 86


state 125

   27 exp: FOR id ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 133
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 126

   53 fundec: FUNCTION id LPAREN typefields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 134
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 127

   54 fundec: FUNCTION id LPAREN typefields RPAREN COLON . id EQ exp

    ID  shift, and go to state 1

    id  go to state 135


state 128

   46 typefields: id COLON id . COMMA typefields
   47           | id COLON id .

    COMMA  shift, and go to state 136

    $default  reduce using rule 47 (typefields)


state 129

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   50 vardec: VAR id COLON id ASSIGN exp .

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    $default  reduce using rule 50 (vardec)


state 130

   44 ty: LBRACE typefields RBRACE .

    $default  reduce using rule 44 (ty)


state 131

   45 ty: ARRAY OF id .

    $default  reduce using rule 45 (ty)


state 132

   31 refields: id EQ exp COMMA refields .

    $default  reduce using rule 31 (refields)


state 133

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   27    | FOR id ASSIGN exp TO exp DO exp .

    $default  reduce using rule 27 (exp)


state 134

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   53 fundec: FUNCTION id LPAREN typefields RPAREN EQ exp .

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    $default  reduce using rule 53 (fundec)


state 135

   54 fundec: FUNCTION id LPAREN typefields RPAREN COLON id . EQ exp

    EQ  shift, and go to state 137


state 136

   46 typefields: id COLON id COMMA . typefields

    ID  shift, and go to state 1

    $default  reduce using rule 48 (typefields)

    typefields  go to state 138
    id          go to state 105


state 137

   54 fundec: FUNCTION id LPAREN typefields RPAREN COLON id EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    MINUS   shift, and go to state 4
    LPAREN  shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 139
    seq      go to state 14
    record   go to state 15
    array    go to state 16
    lvalue   go to state 17
    funcall  go to state 18
    id       go to state 19


state 138

   46 typefields: id COLON id COMMA typefields .

    $default  reduce using rule 46 (typefields)


state 139

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   16    | exp . NEQ exp
   17    | exp . GT exp
   18    | exp . LT exp
   19    | exp . GE exp
   20    | exp . LE exp
   21    | exp . AND exp
   22    | exp . OR exp
   54 fundec: FUNCTION id LPAREN typefields RPAREN COLON id EQ exp .

    OR      shift, and go to state 37
    AND     shift, and go to state 38
    GE      shift, and go to state 39
    GT      shift, and go to state 40
    LE      shift, and go to state 41
    LT      shift, and go to state 42
    NEQ     shift, and go to state 43
    EQ      shift, and go to state 44
    MINUS   shift, and go to state 45
    PLUS    shift, and go to state 46
    DIVIDE  shift, and go to state 47
    TIMES   shift, and go to state 48

    $default  reduce using rule 54 (fundec)
